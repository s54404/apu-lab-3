> library(neuralnet)
> 
> wczytana_ramka <- read.csv("tablety.csv", sep = ";",  dec = ",")
> 
> # Stwórz druga ramke danych  
> df <- data.frame(
+   Nazwa = wczytana_ramka$nazwa, 
+   Cena = wczytana_ramka$cena, 
+   RAM = wczytana_ramka$ram, 
+   HDD = wczytana_ramka$hdd, 
+   Ekran = wczytana_ramka$wyswietlacz)  
> 
> 
> 
> # Skalowanie danych
> 
> maxs <- apply(df[,2:5], 2, max) 
> mins <- apply(df[,2:5], 2, min)
> 
> scaled_df <- as.data.frame(scale(df[2:5], center = mins, scale = maxs - mins))
> 
> # Trenowanie sieci
> nn <- neuralnet(Cena ~ RAM + HDD + Ekran, scaled_df, hidden=c(9,3),linear.output=FALSE, threshold = 0.001, lifesign = "full")
hidden: 9, 3    thresh: 0.001    rep: 1/1    steps:     624	error: 0.00411	time: 0.09 secs
> 
> plot(nn)
> 
> # Testowanie sieci
> test_results <- compute(nn, scaled_df[2:4])
> 
> # Odwrócenie skalowania dla wyników
> unscaled_results <- (test_results$net.result * (max(df$Cena) - min(df$Cena))) + min(df$Cena)
> 
> print(unscaled_results)
            [,1]
 [1,]  2365.5243
 [2,]  3047.4836
 [3,]  3047.4836
 [4,]  3047.4836
 [5,]  6275.3973
 [6,]  3693.3674
 [7,]  4640.3111
 [8,] 10367.5336
 [9,]  2613.6599
[10,]  6574.5899
[11,]   515.3515
[12,]   573.3363
[13,]  1041.4409
[14,]   670.1503
[15,]   516.8829
> df_res = cbind(df$Cena, unscaled_results)
> print(df_res)
       [,1]       [,2]
 [1,]  1719  2365.5243
 [2,]  3299  3047.4836
 [3,]  3199  3047.4836
 [4,]  3299  3047.4836
 [5,]  6019  6275.3973
 [6,]  3699  3693.3674
 [7,]  4649  4640.3111
 [8,] 10369 10367.5336
 [9,]  2669  2613.6599
[10,]  6699  6574.5899
[11,]   599   515.3515
[12,]   799   573.3363
[13,]   999  1041.4409
[14,]   399   670.1503
[15,]   299   516.8829
> 